<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<service_bundle type="manifest" name="smartos-ui">
    <service name="system/smartdc/smartos-ui" type="service" version="0">
        <create_default_instance enabled="true"/>
        <single_instance/>
        <dependency
            name='smartos-ui-executor'
            grouping='require_all'
            restart_on='none'
            type='service'>
            <service_fmri value='svc:/system/smartdc/smartos-ui-executor:default'/>
        </dependency>
        <exec_method
            type="method"
            name="start"
            timeout_seconds="30"
            exec="/opt/smartos/ui/bin/ui.sh &amp;">
            <method_context working_directory="/opt/smartos/ui">
                <!--
                    The executable will read the TLS key and cert, change user
                    to nobody, chroot, and drop privs
                -->
                <method_credential user="root" group="staff"/>
                <method_environment>
                    <envvar name="RUST_BACKTRACE" value="full"/>
                </method_environment>
            </method_context>
        </exec_method>
        <exec_method
            type="method"
            name="restart"
            exec=":kill"
            timeout_seconds="30">
            <method_context working_directory="/opt/smartos/ui"/>
        </exec_method>
        <exec_method
            type="method"
            name="stop"
            exec=":kill"
            timeout_seconds="30">
            <method_context working_directory="/opt/smartos/ui"/>
        </exec_method>
        <property_group name="startd" type="framework">
            <propval name="ignore_error" type="astring" value="core,signal"/>
        </property_group>
        <property_group name="application" type="application"></property_group>
        <stability value="Unstable"/>
        <template>
            <common_name>
                <loctext xml:lang="C">SmartOS UI</loctext>
            </common_name>
        </template>
    </service>
</service_bundle>